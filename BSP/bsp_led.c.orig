/*
*********************************************************************************************************
*
*	模块名称 : LED指示灯驱动模块
*	文件名称 : bsp_led.c
*	版    本 : V1.0
*	说    明 : 驱动LED指示灯
*
*	修改记录 :
*		版本号  日期        作者     说明
*		V1.0    2013-02-01 armfly  正式发布
*
*	Copyright (C), 2013-2014, 安富莱电子 www.armfly.com
*
*********************************************************************************************************
*/

#include "bsp_led.h"


#define Yn                             13
GPIO_TypeDef* Y_PORT[Yn] = {
//                                Y1_GPIO_Port,
//                                Y2_GPIO_Port,
//                                Y3_GPIO_Port,
                                Y4_GPIO_Port,
	                              Y5_GPIO_Port,
                                Y6_GPIO_Port,
                                Y7_GPIO_Port,
	                              Y8_GPIO_Port,
                                Y9_GPIO_Port,
                                Y10_GPIO_Port,
	                              Y11_GPIO_Port,
                                Y12_GPIO_Port,
                                Y13_GPIO_Port,
	                              Y14_GPIO_Port,
                                Y15_GPIO_Port,
                                Y16_GPIO_Port,
                               };

const uint16_t Y_PIN[Yn] = {
//                                Y1_Pin, 
//                                Y2_Pin,
//                                Y3_Pin,                                
                                Y4_Pin, 
                                Y5_Pin,
                                Y6_Pin,
                                Y7_Pin,
                                Y8_Pin,                                
                                Y9_Pin, 
                                Y10_Pin,
                                Y11_Pin, 
                                Y12_Pin,
                                Y13_Pin,                                
                                Y14_Pin, 
                                Y15_Pin,
                                Y16_Pin,
                               };


///**
// * @brief LED variables
// */
//GPIO_TypeDef* LED_PORT[LEDn] = {LED1_GPIO_PORT, 
//                                LED2_GPIO_PORT, 
//                                LED3_GPIO_PORT,
//                                LED4_GPIO_PORT};

//const uint16_t LED_PIN[LEDn] = {LED1_PIN, 
//                                LED2_PIN, 
//                                LED3_PIN,
//                                LED4_PIN};


/**
  * @brief  Configures LED GPIO.
  * @param  Led: Specifies the Led to be configured. 
  *   This parameter can be one of following parameters:
  *     @arg LED1
  *     @arg LED2
  *     @arg LED3
  *     @arg LED4
  */
//void BSP_LED_Init(Led_TypeDef Led)
//{
//  GPIO_InitTypeDef  gpioinitstruct = {0};
//  
//  /* Enable the GPIO_LED clock */
//  LEDx_GPIO_CLK_ENABLE(Led);

//  /* Configure the GPIO_LED pin */
//  gpioinitstruct.Pin    = LED_PIN[Led];
//  gpioinitstruct.Mode   = GPIO_MODE_OUTPUT_PP;
//  gpioinitstruct.Pull   = GPIO_NOPULL;
//  gpioinitstruct.Speed  = GPIO_SPEED_FREQ_HIGH;

//  HAL_GPIO_Init(LED_PORT[Led], &gpioinitstruct);

//  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_RESET);
//}

/**
  * @brief  Turns selected LED On.
  * @param  Led: Specifies the Led to be set on. 
  *   This parameter can be one of following parameters:
  *     @arg LED1
  *     @arg LED2
  *     @arg LED3
  *     @arg LED4
  */
//void BSP_LED_On(Y_TypeDef Led)
//{
//  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_SET);
//}


//void BSP_LED_Off(Led_TypeDef Led)
//{
////  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_RESET);
//}


//void BSP_LED_Toggle(Led_TypeDef Led)
//{
////  HAL_GPIO_TogglePin(LED_PORT[Led], LED_PIN[Led]);
//}																
//																
																
																

/*
*********************************************************************************************************
*	函 数 名: bsp_InitLed
*	功能说明: 配置LED指示灯相关的GPIO,  该函数被 bsp_Init() 调用。
*	形    参:  无
*	返 回 值: 无
*********************************************************************************************************
*/
void bsp_InitLed(void)
{


}

/*
*********************************************************************************************************
*	函 数 名: bsp_LedOn
*	功能说明: 点亮指定的LED指示灯。
*	形    参:  _no : 指示灯序号，范围 1 - 4
*	返 回 值: 无
*********************************************************************************************************
*/
void bsp_LedOn(uint8_t _no)
{


}

/*
*********************************************************************************************************
*	函 数 名: bsp_LedOff
*	功能说明: 熄灭指定的LED指示灯。
*	形    参:  Led : 指示灯序号，范围 1 - 4
*	返 回 值: 无
*********************************************************************************************************
*/
void bsp_LedOff(uint8_t _no)
{



}
/*
*********************************************************************************************************
*	函 数 名: bsp_LedToggle
*	功能说明: 翻转指定的LED指示灯。
*	形    参:  Led : 指示灯序号，范围 1 - 4
*	返 回 值: 按键代码
*********************************************************************************************************
*/
/*
*********************************************************************************************************
*	函 数 名: bsp_LedToggle
*	功能说明: 翻转指定的LED指示灯。
*	形    参:  _no : 指示灯序号，范围 1 - 4
*	返 回 值: 按键代码
*********************************************************************************************************
*/
void BSP_Y_Toggle(Y_TypeDef Led)
{
    HAL_GPIO_TogglePin(Y_PORT[Led], Y_PIN[Led]);
}

void bsp_LedToggle(uint8_t _no)
{
	
	
//	uint32_t pin;

//    if (_no == 1)
//    {
//		pin = LED1;
//        HAL_GPIO_TogglePin(M_O4_GPIO_Port,M_O4_Pin);
//    }
//    else if (_no == 2)
//    {
//		pin = LED2;
//        HAL_GPIO_TogglePin(M_O5_GPIO_Port,M_O5_Pin);
//    }
//	else if (_no == 3)
//	{
//		pin = LED3;
//	}

//    else
//    {
//        return;
//    }

//	if (HC574_GetPin(pin))
//	{
//		HC574_SetPin(pin, 0);
//	}
//	else
//	{
//		HC574_SetPin(pin, 1);
//	}
}

/*
*********************************************************************************************************
*	函 数 名: bsp_IsLedOn
*	功能说明: 判断LED指示灯是否已经点亮。
*	形    参:  _no : 指示灯序号，范围 1 - 4
*	返 回 值: 1表示已经点亮，0表示未点亮
*********************************************************************************************************
*/
uint8_t bsp_IsLedOn(uint8_t _no)
{
//    uint32_t pin;
//    if (_no == 1)
//    {
//        pin = M_O4_Pin;
//    }
//    else if (_no == 2)
//    {
//        pin = M_O5_Pin;
//    }
////	else if (_no == 3)
////	{
////		pin = LED3;
////	}
////	else if (_no == 4)
////	{
////		pin = LED4;
////	}
//    else
//    {
//        return 0;
//    }

//	if (HC574_GetPin(pin))
//	{
//		return 0;	/* 灭 */
//	}
//	else
//	{
//		return 1;	/* 亮 */
//	}
}


//////**************************************************************************************************
//////函数名：	vLED_Flash()
//////说  明：	LED闪烁
//////参  数：	My_LED_TypeDef* g_ptLED：LED编号
//////				unsigned int  Ontime：亮灯持续时间,时间单位为vLED_Update函数的调用周期
//////				unsigned int  Offtime：熄灯的持续时间,时间单位为vLED_Update函数的调用周期
//////返回值： 无
//////**************************************************************************************************
////void vLED_Flash(My_LED_TypeDef* g_ptLED, unsigned int  Ontime,unsigned int  Offtime)
////{
////    g_ptLED->ucOnTime 		= Ontime;
////    g_ptLED->ucOffTime 		= Ontime+Offtime;
////    g_ptLED->ucCountTime 	= 0;
////}
//////**************************************************************************************************
//////函数名：	vLED_Update()
//////说  明：	跟新LED状态，此函数需要固定周期调用。
//////参  数：	My_LED_TypeDef* g_ptLED
//////返回值： 无
//////**************************************************************************************************
////void vLED_Update(My_LED_TypeDef* g_ptLED)
////{
////    if(g_ptLED->ucCountTime < g_ptLED->ucOnTime)
////    {
////        if(g_ptLED->ucPhase)	GetBit(Output.ALL,g_ptLED->uiGPIO);
////        else									SetBit(Output.ALL,g_ptLED->uiGPIO);
////    }

////    else
////    {
////        //LED 灭
////        if(g_ptLED->ucPhase)	GetBit(Output.ALL,g_ptLED->uiGPIO);
////        else									SetBit(Output.ALL,g_ptLED->uiGPIO);
////    }
////    g_ptLED->ucCountTime++;
////    if(g_ptLED->ucCountTime >= g_ptLED->ucOffTime)
////    {
////        //计数器清零
////        g_ptLED->ucCountTime=0;
////    }
////}





/***************************** 安富莱电子 www.armfly.com (END OF FILE) *********************************/
